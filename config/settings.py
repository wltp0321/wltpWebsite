"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from django.core.exceptions import ImproperlyConfigured
import json
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATES_DIR = BASE_DIR / "templates"

secret_file = os.path.join(BASE_DIR, '../secrets.json')

with open(secret_file) as f:
    secrets = json.loads(f.read())

def get_secret(setting, secrets=secrets):
    try:
        return secrets[setting]
    except KeyError:
        error_msg = "Set the {} environment variable".format(setting)
        raise ImproperlyConfigured(error_msg)

SECRET_KEY = get_secret("SECRET_KEY")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

CSRF_TRUSTED_ORIGINS = [
    'https://www.wltp.world',
    '*'
    'https://wltp.world',
]

# Application definition


# 세션 만료 시간 (초 단위) — 예: 60분
SESSION_COOKIE_AGE = 3600 # 60분 = 3600초

# 브라우저를 닫으면 세션 만료 (선택)
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# 사용자가 요청할 때마다 세션 시간 초기화 여부
SESSION_SAVE_EVERY_REQUEST = True

USER_CLEANUP_INTERVAL_SECONDS = 3600


RECAPTCHA_SITE_KEY = get_secret("Captcha_Public_KEY")
RECAPTCHA_PRIVATE_KEY = get_secret("Captcha_Private_KEY")


INSTALLED_APPS = [
    'main',
    'ranking',
    'account',
    'api',
    'how_to_join',
    'description',
    'notice',
    'config',
    'rule',
    'blog',
    'markdownx',
    'snowpenguin.django.recaptcha3',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.staticfiles',
    'sslserver',
    'widget_tweaks',
    'mathfilters',
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',  # 맨 위쪽에 추가!
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True

SITE_URL = 'https://www.wltp.world'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOCALE_PATHS = (BASE_DIR / "locale",)

STATIC_ROOT = BASE_DIR / 'staticfiles'  # 배포용 폴더 (임의 지정)
STATICFILES_DIRS = [str(BASE_DIR / 'static')]  # 개발 중 정적 파일 폴더


LOGIN_REDIRECT_URL = '/'
MEDIA_ROOT = BASE_DIR/'media'
MEDIA_URL = '/media/'

EMAIL_HOST = 'smtp.gmail.com' 		 # 메일 호스트 서버
EMAIL_PORT = '587'
EMAIL_HOST_USER = 'hant20110321@gmail.com' 	 # 우리가 사용할 Gmail
EMAIL_HOST_PASSWORD = get_secret("SMTP_KEY")		 # 우리가 사용할 Gmail p
EMAIL_USE_TLS = True			 # TLS 보안 설정
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER	 # 응답 메일 관련 설정

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
